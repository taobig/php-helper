#
# Travis Setup
#

# faster builds on new travis setup not using sudo
sudo: false
language: php

php:
  - 7.4
  - nightly

matrix:
  fast_finish: true

#allow_failures:
#  - php: nightly

services:
  - redis-server

# cache vendor dirs
cache:
  directories:
    - vendor
    - $HOME/.composer/cache

#before_install:
#  - sudo apt-get -qq update

install:
  - |
  - if [ -n "$GH_TOKEN" ]; then composer config github-oauth.github.com ${GH_TOKEN}; fi;
#  - travis_retry composer self-update && composer --version
  # use composer 1.x
  - command -v composer && wget -c -O ~/composer https://getcomposer.org/download/1.10.17/composer.phar && chmod +x ~/composer
  - php ~/composer --version
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  # core framework:
  - travis_retry php ~/composer global require "fxp/composer-asset-plugin:^1.4.2" && php ~/composer global show
  - travis_retry php ~/composer install --prefer-dist --no-interaction
#  - if [ $TRAVIS_PHP_VERSION = 'nightly' ]; then travis_retry composer install --prefer-dist --no-interaction --ignore-platform-reqs; else  composer install; fi


before_script:
  # show some versions and env information
  - php -r "echo ini_get('memory_limit').PHP_EOL;"
  - echo 'memory_limit = 64M' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - php -r "echo ini_get('memory_limit').PHP_EOL;"
  #  redis-5.3.2 released(2020-10-22)
  #- if [ `php -v |sed '2,$d'|awk '{print $2}'|awk -F '.' '{print $1}' ` -eq 8 ] ; then no | pecl install redis; else echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
#  -  no | pecl install redis-5.3.2RC2
  -  echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

script:
  # ensure no files contain UTF-8 byte order mark
  - if ! grep -rlI $'\xEF\xBB\xBF' src/ ; then echo "no utf8 BOM found"; else echo "found utf8 BOM in some files. See above."; exit 1; fi
  # validate composer.json
  - php ~/composer validate --no-check-lock
  - pear version
#  - pear run-tests tests/phpt/FileUploadTest.phpt -v
  - php -S localhost:8080 tests/route.php > /dev/null 2>&1 &
  # run PHPUnit
  - vendor/bin/phpunit --verbose

after_success:
 - travis_retry php vendor/bin/php-coveralls -v
